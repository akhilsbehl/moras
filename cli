#!/usr/bin/env python
import sys
from os import name
from typing import List

from termcolor import colored

from kanalib import ANALYTICS
from kanalib import CHOICES
from kanalib import get_final_scores
from kanalib import get_random_kana_romaji_pair
from kanalib import validate_input_against_answer


def ask_for_choice(options: List[str]) -> str:
    """Ask the user for a choice."""
    choice = "?"
    try:
        while choice not in options:
            i = input(
                f"Which one do you want to practice ({', '.join(options)})? "
            ).lower()
            matched_choices = [c for c in options if c.lower().startswith(i)]
            if len(matched_choices) == 1:
                choice = matched_choices[0]
            elif len(matched_choices) > 1:
                print(
                    "Multiple matches found:",
                    f"{', '.join(matched_choices)}",
                )
            else:
                print("No matches found.")
    except KeyboardInterrupt:
        print("\nSession aborted.")
        sys.exit()
    else:
        return choice


def get_uinput_romaji_of_kana(ktype: str, kana: str) -> str:
    """Prompt the user for kana to romaji translation."""
    msg = " ".join(
        [
            f"What is the romaji representation of {ktype}",
            colored(f"{kana}", "yellow", attrs=["bold"]),
            ": ",
        ]
    )
    return input(msg)


if __name__ == "__main__":
    """Loop over the practice steps."""
    print("頑張って!")
    ktype = ask_for_choice(CHOICES)
    try:
        while True:
            kana, answer = get_random_kana_romaji_pair(ktype)
            uinput = get_uinput_romaji_of_kana(ktype, kana)
            correct = validate_input_against_answer(uinput, answer)
            ANALYTICS.update_analytics_data(ktype, kana, correct)
            ANALYTICS.get_score("This", ktype)
    except KeyboardInterrupt:
        print("\nお疲れ様です!")
        get_final_scores(ktype)
    finally:
        ANALYTICS.save_analytics_data()
        sys.exit()
